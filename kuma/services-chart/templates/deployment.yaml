{{- $dbs := dict }} {{/* Track which DBs we've rendered */}}
{{- range $key, $svc := .Values.services }}
{{- if and $svc.enabled $svc.db.enabled }}
{{- if not (hasKey $dbs $svc.db.name) }} {{/* Only render if not already rendered */}}
{{- $_ := set $dbs $svc.db.name true }} {{/* Mark this DB as rendered */}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $svc.db.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ $svc.db.name }}
  template:
    metadata:
      labels:
        app: {{ $svc.db.name }}
        kuma.io/service: {{ $svc.db.name }}
        type: database
    spec:
      containers:
        - name: postgres
          image: {{ $svc.db.image }}
          ports:
            - containerPort: {{ $svc.db.port }}
          env:
            - name: POSTGRES_USER
              value: {{ $svc.db.user }}
            - name: POSTGRES_PASSWORD
              value: {{ $svc.db.password }}
            - name: POSTGRES_DB
              value: {{ $svc.db.dbname }}
          readinessProbe:
            exec:
              command: ["pg_isready", "-U", "{{ $svc.db.user }}"]
            initialDelaySeconds: 5
            periodSeconds: 5
          volumeMounts:
            - name: pgdata
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: {{ $svc.db.name }}-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $svc.db.name }}
spec:
  selector:
    app: {{ $svc.db.name }}
  ports:
    - port: {{ $svc.db.port }}
      targetPort: {{ $svc.db.port }}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ $svc.db.name }}-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ $svc.db.storage | default "1Gi" }}
---
{{- end }}
{{- end }}
{{- end }}


{{- range $key, $svc := .Values.services }}
{{- if $svc.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $svc.name }}-{{ $svc.version | default "v1" }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ $svc.name }}
  template:
    metadata:
      labels:
        app: {{ $svc.name }}
        kuma.io/service: {{ $svc.name }}
        version: {{ $svc.version | default "v1" }}
        type: backend
    spec:
      {{- if $svc.db.enabled }}
      initContainers:
        - name: wait-for-db
          image: busybox
          command:
            - sh
            - -c
            - until nc -z {{ $svc.db.name }} {{ $svc.db.port }}; do echo waiting for db; sleep 2; done
      {{- end }}
      containers:
        - name: {{ $svc.name }}
          image: {{ $svc.image }}
          ports:
            - containerPort: {{ $svc.port }}
          env:
            {{- if $svc.db.enabled }}
            - name: DATABASE_URL
              value: "postgresql://{{ $svc.db.user }}:{{ $svc.db.password }}@{{ $svc.db.name }}:{{ $svc.db.port }}/{{ $svc.db.dbname }}"
            {{- end }}
---
{{- end }}
{{- end }}
